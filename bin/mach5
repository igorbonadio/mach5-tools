#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
$LOAD_PATH.unshift(File.dirname(__FILE__))

require 'mach5-tools'
require 'thor'

class App < Thor
  desc "benchmark", "Run benchmarks"
  method_option :all, :type => :boolean, :aliases => "-a", :desc => "Run all benchmarks even if there is already a result"
  method_option :list, :type => :boolean, :aliases => "-l", :desc => "List all available benchmarks"
  method_option :only, :type => :array, :aliases => "-o", :desc => "Run only the specified benchmarks"
  def benchmark
    runner = Mach5::Runner.new(eval(File.open("Mach5file").readlines.join))
    if options.list
      runner.list_benchmarks.each do |benchmark|
        puts benchmark
      end
    elsif options.only
      runner.benchmark(only: options.only)
    else
      runner.benchmark(all: options.all)
    end
  end

  desc "chart", "Generate charts"
  method_option :all, :type => :boolean, :aliases => "-a", :desc => "Generates all benchmarks even if it was already generated"
  method_option :list, :type => :boolean, :aliases => "-l", :desc => "List all available charts"
  method_option :only, :type => :array, :aliases => "-o", :desc => "Generates only the specified charts"
  def chart
    runner = Mach5::Runner.new(eval(File.open("Mach5file").readlines.join))
    if options.list
      runner.list_charts.each do |chart|
        puts chart
      end
    elsif options.only
      runner.chart(only: options.only)
    else
      runner.chart(all: options.all)
    end
  end

  desc "version", "Print the version"
  def version
    puts "v#{File.open(File.join(File.dirname(__FILE__), "../VERSION")).readlines.join}"
  end

  desc "init", "Create an initial Mach5file"
  def init
    if File.exists?("Mach5file")
      puts "There is already a Mach5file. If you want to overwrite it, try to remove it first and then generate a new one."
    else
      File.open("Mach5file", "w") do |f|
        f.write(File.open(File.join(File.dirname(__FILE__), "../lib/templates/Mach5file")).readlines.join.gsub("{{PROJECT_NAME}}", File.basename(Dir.getwd)))
      end
    end
  end

  default_task :benchmark
end

App.start